apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  labels:
    app: nginx
spec:
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx
        ports:
        - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: nginx
spec:
  ports:
  - port: 80
    protocol: TCP
  selector:
    app: nginx
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mercure
  labels:
    app: mercure
spec:
  selector:
    matchLabels:
      app: mercure
  template:
    metadata:
      labels:
        app: mercure
    spec:
      containers:
      - name: mercure
        image: dunglas/mercure
        ports:
        - containerPort: 80
        env:
        - name: JWT_KEY
          value: "!ChangeMe!"
        - name: DEBUG
          value: "1"
        - name: DEMO
          value: "1"
---
apiVersion: v1
kind: Service
metadata:
  name: mercure
spec:
  ports:
  - port: 80
    protocol: TCP
  selector:
    app: mercure
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: varnish
  labels:
    app: varnish
spec:
  replicas: 2
  selector:
    matchLabels:
      app: varnish
  template:
    metadata:
      labels:
        app: varnish
    spec:
      containers:
      - name: http-broadcast
        image: jderusse/http-broadcast
        env:
        - name: SERVER_ADDR
          value: :6083
        - name: AGENT_ENDPOINT
          value: http://127.0.0.1:6082
        - name: HUB_ENDPOINT
          value: http://mercure/.well-known/mercure
        - name: HUB_TOKEN
          value: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJtZXJjdXJlIjp7InN1YnNjcmliZSI6WyIqIl0sInB1Ymxpc2giOlsiKiJdfX0.M1yJUov4a6oLrigTqBZQO_ohWUsg3Uz1bnLD4MIyWLo"
        - name: LOG_LEVEL
          value: info
        - name: LOG_FORMAT
          value: text
      - name: varnish
        image: varnish
        volumeMounts:
        - name: varnish-conf
          mountPath: /etc/varnish
          readOnly: true
        command:
        - "varnishd"
        - "-a"
        - ":6081"
        - "-a"
        - ":6082"
        - "-F"
        - "-f"
        - "/etc/varnish/default.vcl"
      volumes:
      - name: varnish-conf
        configMap:
          name: varnish-conf
---
apiVersion: v1
kind: Service
metadata:
  name: varnish
spec:
  ports:
  - name: varnish-user
    port: 6081
    protocol: TCP
  - name: varnish-admin
    port: 6082
    protocol: TCP
  - name: http-broadcast
    port: 6083
    protocol: TCP
  selector:
    app: varnish
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: varnish-conf
data:
  default.vcl: |
    vcl 4.1;
    acl invalidators {
        "127.0.0.1";
    }
    sub vcl_recv {
        if (req.method == "PURGE") {
            if (!client.ip ~ invalidators) {
                return (synth(405, "Not allowed"));
            }
            return (purge);
        }
    }
    backend default {
      .host = "nginx";
      .port = "80";
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bench
  labels:
    app: bench
spec:
  replicas: 1
  selector:
    matchLabels:
      app: bench
  template:
    metadata:
      labels:
        app: bench
    spec:
      containers:
      - name: bench-get
        image: alpine
        command:
        - "sh"
        - "-c"
        - 'apk add --no-cache curl && while true; do curl -si http://varnish:6081/ -H "Host: www.example.com" | grep "Age"; sleep 1; done'
      - name: bench-purge
        image: alpine
        command:
        - "sh"
        - "-c"
        - 'apk add --no-cache curl && while true; do curl -s -X PURGE http://varnish:6083 -H "Host: www.example.com"; sleep 10; done'
