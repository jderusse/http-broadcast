name: Quality
on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches:
    - master

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@master
    - name: Lint Go Code
      uses: docker://golangci/golangci-lint:latest
      with:
        args: golangci-lint run ./...
  test:
    name: Test with Coverage
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go
      uses: actions/setup-go@v1
      with:
        go-version: 1.13
    - name: Check out code
      uses: actions/checkout@v2
    - name: Fetch last commits
      run: git fetch --depth=1 origin "$GITHUB_HEAD_REF"
      if: github.event_name == 'pull_request'
    - name: Install dependencies
      run: |
        go mod download
    - name: Run Unit tests
      run: |
        go test -race -covermode atomic -coverprofile=profile.cov ./...
    - name: Send coverage
      uses: shogo82148/actions-goveralls@v1
      with:
        path-to-profile: profile.cov